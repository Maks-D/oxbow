[package]
name = "oxbow"
version = "0.1.1"
edition = "2021"
keywords = ["deltalake", "parquet", "lambda", "delta"]
homepage = "https://github.com/buoyant-data/oxbow"
repository = "https://github.com/buoyant-data/oxbow"
description = "Tooling for converting directories of Apache Parquet files into Delta Lake tables"
license-file = "LICENSE.txt"

[[bin]]
name = "oxbow-cli"
path = "src/bin/cli.rs"

[[bin]]
name = "oxbow-lambda"
path = "src/bin/lambda.rs"

[dependencies]
anyhow = "*"
chrono = "*"
deltalake = { version = "0.14.0", features = ["s3", "json"]}
futures = "*"
log = "0.4"
pretty_env_logger = "0.4"
tokio = { version = "1", features = ["macros"] }
url = { version = "2.3", features = ["serde"] }

# cli requirements
gumdrop = "=0.8"

# lambda requirements
aws_lambda_events = { version = "0.7" }
dynamodb_lock = { version = "*" }
lambda_runtime = { version = "0.8" }
rusoto_core = { version = "0.47", default-features = false, features = ["rustls"]}
rusoto_credential = { version = "0.47"}
rusoto_dynamodb = { version = "0.47", default-features = false}
rusoto_s3 = { version = "0.47", default-features = false, features = ["rustls"] }
serde = { version = "=1", features = ["rc"] }
serde_json = "=1"
urlencoding = "=2"

[dev-dependencies]
fs_extra = "1"
tempfile = "*"

[profile.release]
panic = "abort"
lto = true
codegen-units = 1
incremental = false
opt-level = "z"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.0.6"
# The preferred Rust toolchain to use in CI (rustup toolchain syntax)
rust-toolchain-version = "1.67.1"
# CI backends to support (see 'cargo dist generate-ci')
ci = ["github"]
# The installers to generate for each app
installers = []
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu", "x86_64-apple-darwin", "aarch64-apple-darwin"]
